version: '3'
services:

  api:
    build:
      context: ./../eth-api
      dockerfile: ./../eth-api/eth-api.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./../eth-api:/app
    depends_on:
      - postgresql-reader
      - postgresql-writer
      - redis
      - mongo
      - rabbitmq
    sysctls:
      - net.ipv4.ip_local_port_range=1024 65535
      - net.ipv4.tcp_tw_reuse=1


  emitter:
    build:
      context: ./../eth-emitter
      dockerfile: ./../eth-emitter/eth-emitter.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./../eth-emitter:/app
    depends_on:
      - postgresql-reader
      - postgresql-writer
      - redis
      - mongo
      - rabbitmq
    sysctls:
      - net.ipv4.ip_local_port_range=1024 65535
      - net.ipv4.tcp_tw_reuse=1


  listener:
    build:
      context: ./../eth-listener
      dockerfile: ./../eth-listener/eth-listener.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./../eth-listener:/app
    depends_on:
      - postgresql-reader
      - postgresql-writer
      - redis
      - mongo
      - rabbitmq
    sysctls:
      - net.ipv4.ip_local_port_range=1024 65535
      - net.ipv4.tcp_tw_reuse=1


  postgresql-reader:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      POSTGRESQL_DATABASE: eth_blocks
      POSTGRES_DB: eth_blocks
    healthcheck:
      test: [ "CMD", "pg_isready", "--dbname=eth_blocks", "--username=postgres" ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./.db-data/postgres/:/var/lib/postgresql/data/


  postgresql-writer:
    image: 'postgres:14.2'
    ports:
      - "5433:5433"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      POSTGRESQL_DATABASE: eth_blocks
      POSTGRES_DB: eth_blocks
      PGPORT: 5433
    command: postgres -p 5433
    healthcheck:
      test: [ "CMD", "pg_isready", "--dbname=eth_blocks", "--username=postgres" ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./.db-data/postgres-writer/:/var/lib/postgresql/data/


  redis:
    image: 'redis:alpine'
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - ./.db-data/redis/:/data


  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: eth_blocks
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - ./.db-data/mongodb/:/data/db


  rabbitmq:
    image: 'rabbitmq:3-management'
    ports:
      - "5672:5672"
      - "15672:15672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./.db-data/rabbitmq/:/var/lib/rabbitmq/
    environment:
      - RABBITMQ_CHANNEL_MAX=10000000